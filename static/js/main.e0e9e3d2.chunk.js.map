{"version":3,"sources":["components/ServiceList/FilterServices.jsx","components/ServiceList/LoadingSpinner.jsx","components/ServiceForm/ServiceForm.jsx","components/ServiceList/ErrorPopup.jsx","lib/getResponse.js","reducers/serviceList.js","reducers/editService.js","components/ServiceForm/EditServiceForm.jsx","reducers/addService.js","components/ServiceForm/AddServiceForm.jsx","components/Modal/Modal.jsx","hooks/useOnClickOutside.js","components/ServiceList/ServiceList.jsx","App.jsx","store/index.js","index.js"],"names":["FilterServices","onFilter","useState","value","setValue","className","type","onChange","target","LoadingSpinner","radius","width","color","length","viewBox","cx","cy","r","fill","strokeWidth","stroke","ServiceForm","onInputChange","onFormSubmit","isLoading","formData","useSelector","state","service","onSubmit","e","preventDefault","label","name","inputValue","price","content","FormInput","ErrorPopup","message","getResponse","a","url","method","data","fetch","body","JSON","stringify","response","ok","Error","statusText","json","getServicesAsync","createAsyncThunk","_","rejectWithValue","process","removeServiceAsync","id","dispatch","removeService","serviceListSlice","createSlice","initialState","services","loading","error","reducers","addService","payload","newService","Number","push","filter","editService","serviceIndex","findIndex","extraReducers","pending","fulfilled","rejected","actions","serviceListReducer","reducer","getServiceAsync","editServiceAsync","history","resetEditForm","editServiceSlice","getService","changeEditServiceField","editServiceReducer","EditServiceForm","useDispatch","useHistory","useEffect","console","log","addServiceAsync","addServiceSlice","changeAddServiceField","addServiceReducer","AddServiceForm","AddServiceModal","isOpen","EditServiceModal","match","params","Modal","children","ref","useRef","onClose","handler","listener","element","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","onClick","ServiceList","map","i","key","ServiceItem","to","Button","App","serviceList","filtered","setFiltered","exact","path","string","filteredServices","toLowerCase","includes","filterByString","component","store","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0e9e3d2.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const FilterServices = ({ onFilter }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = ({ target: { value } }) => {\n    setValue(value);\n    onFilter(value);\n  };\n\n  return (\n    <div className=\"filter-services\">\n      <label className=\"filter-services_label\">\n        <span className=\"filter-services_text\">Search</span>\n        <input\n          type=\"text\"\n          className=\"filter-services_input\"\n          onChange={onChange}\n          value={value}\n        />\n      </label>\n    </div>\n  );\n};\n","export const LoadingSpinner = ({ radius, width, color }) => {\n  // radius и width работают совсем не так, как мне нужно было, но оставлю так\n  const length = radius * 2.5;\n\n  return (\n    <svg className=\"loading-spinner\" viewBox={`0 0 ${length} ${length}`}>\n      <circle\n        className=\"path\"\n        cx={length / 2}\n        cy={length / 2}\n        r={radius}\n        fill=\"none\"\n        strokeWidth={width}\n        stroke={color}\n      ></circle>\n    </svg>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { LoadingSpinner } from '../ServiceList/LoadingSpinner';\n\nexport const ServiceForm = ({\n  type,\n  onInputChange,\n  onFormSubmit,\n  isLoading,\n}) => {\n  const formData = useSelector((state) => state[`${type}Service`].service);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(formData);\n  };\n\n  return (\n    <div className=\"form_container\">\n      {isLoading && (\n        <div className=\"loading_wrapper\">\n          <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n        </div>\n      )}\n      <form onSubmit={onSubmit} className=\"add-service_form\">\n        <FormInput\n          label=\"Name\"\n          name=\"name\"\n          inputValue={formData.name}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <FormInput\n          label=\"Price\"\n          name=\"price\"\n          inputValue={formData.price}\n          onInputChange={onInputChange}\n          type=\"number\"\n        />\n        <FormInput\n          label=\"Description\"\n          name=\"content\"\n          inputValue={formData.content}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <button type=\"submit\" className=\"form_submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst FormInput = ({ name, label, inputValue, onInputChange, type }) => {\n  const onChange = ({ target: { value } }) => {\n    // для цены, костыль на скорую руку\n    const inputValue = type === 'number' ? +value : value;\n    onInputChange(name, inputValue);\n  };\n\n  return (\n    <label className=\"form_label\">\n      <span className=\"form_label_text\">{label}</span>\n      <input\n        onChange={onChange}\n        className=\"form_input\"\n        value={inputValue}\n        type={type}\n      />\n    </label>\n  );\n};\n","export const ErrorPopup = ({ message }) => {\n  return <div className=\"error-message\">{message}</div>;\n};\n","export async function getResponse({ url, method, data }) {\n  const response = await fetch(url, {\n    method,\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getResponse } from '../lib/getResponse';\n\nconst initialState = {\n  services: [],\n  loading: false,\n  error: null,\n};\n\nexport const getServicesAsync = createAsyncThunk(\n  'serviceList/fetchServices',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: process.env.REACT_APP_API_SERVICES,\n      });\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const removeServiceAsync = createAsyncThunk(\n  'editService/fetchRemoveService',\n  async (id, { dispatch }) => {\n    try {\n      await fetch(`${process.env.REACT_APP_API_SERVICES}/${id}`, {\n        method: 'DELETE',\n      });\n      dispatch(removeService(id));\n    } catch {}\n  },\n);\n\nexport const serviceListSlice = createSlice({\n  name: 'serviceList',\n  initialState,\n  reducers: {\n    addService: (state, { payload }) => {\n      const { id, name, price, content } = payload;\n      const newService = { id, name, price: Number(price), content };\n      state.services.push(newService);\n    },\n    removeService: (state, { payload }) => {\n      state.services = state.services.filter(\n        (service) => service.id !== payload,\n      );\n    },\n    editService: (state, { payload }) => {\n      const serviceIndex = state.services.findIndex(\n        (service) => service.id === payload.id,\n      );\n      state.services[serviceIndex] = payload;\n    },\n  },\n  extraReducers: {\n    [getServicesAsync.pending]: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [getServicesAsync.fulfilled]: (state, { payload }) => {\n      state.services = payload;\n      state.loading = false;\n      state.error = null;\n    },\n    [getServicesAsync.rejected]: (state, { payload }) => {\n      state.error = payload;\n      state.loading = false;\n    },\n  },\n});\n\nexport const { addService, removeService, editService } =\n  serviceListSlice.actions;\n\nexport const serviceListReducer = serviceListSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getResponse } from '../lib/getResponse';\nimport { editService } from './serviceList';\n\nconst initialState = {\n  service: {\n    id: '',\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const getServiceAsync = createAsyncThunk(\n  'editService/fetchFullService',\n  async (id, { rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: `${process.env.REACT_APP_API_SERVICES}/${id}`,\n      });\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const editServiceAsync = createAsyncThunk(\n  'editService/fetchEditService',\n  async ({ service, history }, { dispatch, rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: `${process.env.REACT_APP_API_SERVICES}/${service.id}`,\n        method: 'PUT',\n        data: service,\n      });\n      dispatch(editService(data));\n      dispatch(resetEditForm());\n      history.push(process.env.REACT_APP_HOMEPAGE);\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const editServiceSlice = createSlice({\n  name: 'editService',\n  initialState,\n  reducers: {\n    getService: (state, { payload }) => {\n      state.service = payload;\n    },\n    changeEditServiceField: (state, { payload }) => {\n      const { name, value } = payload;\n      state.service[name] = value;\n    },\n    resetEditForm: (state) => {\n      state.service = initialState.service;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n  extraReducers: {\n    [getServiceAsync.fulfilled]: (state, { payload }) => {\n      state.service = payload;\n    },\n    [editServiceAsync.pending]: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [editServiceAsync.fulfilled]: (state) => {\n      state.service = initialState.service;\n      state.loading = false;\n      state.error = null;\n    },\n    [editServiceAsync.rejected]: (state, { payload }) => {\n      state.error = payload;\n      state.loading = false;\n    },\n  },\n});\n\nexport const { getService, changeEditServiceField, resetEditForm } =\n  editServiceSlice.actions;\n\nexport const editServiceReducer = editServiceSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nimport {\n  changeEditServiceField,\n  editServiceAsync,\n  getServiceAsync,\n} from '../../reducers/editService';\n\nexport const EditServiceForm = ({ id }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error } = useSelector((state) => state.editService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeEditServiceField({ name, value }));\n  };\n\n  const onFormSubmit = ({ id, name, price, content }) => {\n    if (name && price && content) {\n      dispatch(\n        editServiceAsync({ service: { id, name, price, content }, history }),\n      );\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getServiceAsync(id));\n  }, []);\n\n  return (\n    <>\n      <ServiceForm\n        type=\"edit\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} />}\n    </>\n  );\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { getResponse } from '../lib/getResponse';\nimport { addService } from './serviceList';\nimport { resetEditForm } from './editService';\n\nconst initialState = {\n  service: {\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const addServiceAsync = createAsyncThunk(\n  'addService/fetchAddService',\n  async ({ service, history }, { dispatch, rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: `${process.env.REACT_APP_API_SERVICES}`,\n        method: 'POST',\n        data: service,\n      });\n      dispatch(addService(data));\n      dispatch(resetEditForm());\n      history.push(process.env.REACT_APP_HOMEPAGE);\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const addServiceSlice = createSlice({\n  name: 'addService',\n  initialState,\n  reducers: {\n    changeAddServiceField: (state, { payload }) => {\n      const { name, value } = payload;\n      state.service[name] = value;\n    },\n  },\n  extraReducers: {\n    [addServiceAsync.pending]: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [addServiceAsync.fulfilled]: (state) => {\n      state.service = initialState.service;\n      state.loading = false;\n      state.error = null;\n    },\n    [addServiceAsync.rejected]: (state, { payload }) => {\n      state.error = payload;\n      state.loading = false;\n    },\n  },\n});\n\nexport const { changeAddServiceField } = addServiceSlice.actions;\n\nexport const addServiceReducer = addServiceSlice.reducer;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nimport {\n  addServiceAsync,\n  changeAddServiceField,\n} from '../../reducers/addService';\n\nexport const AddServiceForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { loading, error } = useSelector((state) => state.addService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeAddServiceField({ name, value }));\n  };\n\n  const onFormSubmit = ({ name, price, content }) => {\n    if (name && price && content) {\n      dispatch(addServiceAsync({ service: { name, price, content }, history }));\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  return (\n    <>\n      <ServiceForm\n        type=\"add\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} />}\n    </>\n  );\n};\n","import { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\n\nimport { EditServiceForm } from '../ServiceForm/EditServiceForm';\nimport { AddServiceForm } from '../ServiceForm/AddServiceForm';\n\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { resetEditForm } from '../../reducers/editService';\n\nexport const AddServiceModal = () => {\n  return (\n    <Modal isOpen>\n      <AddServiceForm />\n    </Modal>\n  );\n};\n\nexport const EditServiceModal = ({ match }) => {\n  return (\n    <Modal isOpen>\n      <EditServiceForm id={match.params.id} />\n    </Modal>\n  );\n};\n\nexport const Modal = ({ children, isOpen }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const ref = useRef();\n\n  const onClose = () => {\n    // наверное, костыльно диспатчить это в модалке в отрыве от самой формы\n    dispatch(resetEditForm());\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  };\n\n  useOnClickOutside(ref, onClose);\n\n  return (\n    isOpen && (\n      <div className=\"modal_wrapper\">\n        <div className=\"modal\" ref={ref}>\n          <button className=\"modal_close-btn\" onClick={onClose}>\n            ×\n          </button>\n          {children}\n        </div>\n      </div>\n    )\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOnClickOutside = (ref, handler) => {\n  // позаимствованный хук\n  useEffect(() => {\n    const listener = (e) => {\n      const element = ref.current;\n      if (!element || element.contains(e.target)) {\n        return;\n      }\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [handler, ref]);\n};\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeServiceAsync } from '../../reducers/serviceList';\n\nexport const ServiceList = ({ services }) => {\n  return (\n    <ul className=\"service-list\">\n      {services.map((service, i) => (\n        <ServiceItem {...service} key={i} />\n      ))}\n    </ul>\n  );\n};\n\nconst ServiceItem = ({ name, price, id }) => {\n  const dispatch = useDispatch();\n\n  const onRemove = () => {\n    dispatch(removeServiceAsync(id));\n  };\n\n  return (\n    <li className=\"service-item\">\n      <div className=\"service-item_info\">\n        <div className=\"service-item_name\">{name}</div>\n        <div className=\"service-item_price\">{price} ₽</div>\n      </div>\n      <div className=\"service-item_controls\">\n        <Link to={`${process.env.REACT_APP_HOMEPAGE}/${id}`}>\n          <Button label=\"Edit\" />\n        </Link>\n        <Button onClick={onRemove} label=\"Remove\" />\n      </div>\n    </li>\n  );\n};\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button onClick={onClick} className=\"service-item_btn\">\n      {label}\n    </button>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Link,\n  Switch,\n} from 'react-router-dom';\n\nimport { FilterServices } from './components/ServiceList/FilterServices';\nimport { AddServiceModal, EditServiceModal } from './components/Modal/Modal';\nimport { ServiceList } from './components/ServiceList/ServiceList';\nimport { LoadingSpinner } from './components/ServiceList/LoadingSpinner';\nimport { ErrorPopup } from './components/ServiceList/ErrorPopup';\n\nimport { getServicesAsync } from './reducers/serviceList';\n\nimport './styles/app.css';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const { services, loading, error } = useSelector(\n    (state) => state.serviceList,\n  );\n\n  const [filtered, setFiltered] = useState('');\n\n  const filterByString = (string, services) => {\n    return string\n      ? services.filter((service) =>\n          service.name.toLowerCase().includes(string.toLowerCase()),\n        )\n      : null;\n  };\n\n  const onFilter = (string) => {\n    const filteredServices = filterByString(string, services);\n    setFiltered(filteredServices);\n  };\n\n  useEffect(() => {\n    dispatch(getServicesAsync());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Route exact path={['/']}>\n        {/*HOMEPAGE добавил из-за нюанса на GitHub Pages, такое вот костыльное решение*/}\n        <Redirect to={process.env.REACT_APP_HOMEPAGE} />\n      </Route>\n      {loading ? (\n        <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n      ) : error ? (\n        <ErrorPopup message={error} />\n      ) : (\n        <div className=\"services-app\">\n          <Link\n            to={`${process.env.REACT_APP_HOMEPAGE}/add`}\n            className=\"add-service_link\"\n          >\n            <button className=\"add-service_btn\">Add new service</button>\n          </Link>\n          <FilterServices onFilter={onFilter} />\n          <ServiceList services={filtered || services} />\n          <Switch>\n            <Route\n              path={`${process.env.REACT_APP_HOMEPAGE}/add`}\n              component={AddServiceModal}\n            ></Route>\n            <Route\n              path={`${process.env.REACT_APP_HOMEPAGE}/:id`}\n              component={EditServiceModal}\n            ></Route>\n          </Switch>\n        </div>\n      )}\n    </Router>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\n// import thunk from 'redux-thunk';\n\nimport { serviceListReducer } from '../reducers/serviceList';\nimport { addServiceReducer } from '../reducers/addService';\nimport { editServiceReducer } from '../reducers/editService';\n\nexport const store = configureStore({\n  reducer: {\n    serviceList: serviceListReducer,\n    addService: addServiceReducer,\n    editService: editServiceReducer,\n  },\n  // middleware: [thunk],\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}